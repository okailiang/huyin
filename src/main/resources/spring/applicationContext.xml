<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-4.1.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
    http://www.springframework.org/schema/util
    http://www.springframework.org/schema/util/spring-util-4.1.xsd">
    <!-- 引入jdbc等配置文件 -->
    <context:property-placeholder location="classpath:config/jdbc.properties"/>
    <!--加载系统配置properties文件中的属性-->
    <bean id="propertyConfigurer" class="press.wein.home.common.SysConfigProperty">
        <property name="location">
            <value>classpath:config/sysconfig.properties</value>
        </property>
    </bean>
    <!-- 扫描文件（自动将servicec层注入） -->
    <context:component-scan base-package="press.wein.home.*"/>
    <!--<context:component-scan base-package="press.wein.*.service">-->
    <!--<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>-->
    <!--</context:component-scan>-->
    <aop:aspectj-autoproxy/>

    <context:annotation-config/>
    <!--redis缓存-->
    <import resource="classpath*:spring/applicationContext-redis.xml"/>

    <!-- spring与mybatis连接属性 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init"
          destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <!-- 初始化连接大小 -->
        <property name="initialSize">
            <value>3</value>
        </property>
        <!-- 连接池最大使用连接数 -->
        <property name="maxActive">
            <value>100</value>
        </property>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait">
            <value>60000</value>
        </property>
        <!-- 连接池最小空闲 -->
        <property name="minIdle">
            <value>3</value>
        </property>
        <!-- 自动清除无用连接 -->
        <property name="removeAbandoned">
            <value>true</value>
        </property>
        <!-- 清除无用连接的等待时间 -->
        <property name="removeAbandonedTimeout">
            <value>180</value>
        </property>
        <!-- 连接属性 -->
        <property name="connectionProperties">
            <value>clientEncoding=UTF-8</value>
        </property>
    </bean>

    <!-- mybatis文件配置，扫描所有mapper文件 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
          p:dataSource-ref="dataSource"
          p:configLocation="classpath:mybatis/mybatis-config.xml"
          p:mapperLocations="classpath:mapper/*.xml"/>
    <!-- configLocation为mybatis属性 mapperLocations为所有mapper-->

    <!-- spring与mybatis整合配置，扫描所有dao -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"
          p:basePackage="press.wein.*.dao"
          p:sqlSessionFactoryBeanName="sqlSessionFactory"/>

    <!-- 对数据源进行事务管理 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
          p:dataSource-ref="dataSource"/>

    <bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate"
          p:transactionManager-ref="transactionManager"/>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- Google验证码-->
    <bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
        <property name="config">
            <bean class="com.google.code.kaptcha.util.Config">
                <constructor-arg>
                    <props>
                        <prop key="kaptcha.border">no</prop>
                        <prop key="kaptcha.image.width">100</prop>
                        <prop key="kaptcha.image.height">36</prop>
                        <prop key="kaptcha.session.key">code</prop>
                        <prop key="kaptcha.background.clear.from">cyan</prop>
                        <prop key="kaptcha.background.clear.to">lightGray</prop>
                        <prop key="kaptcha.noise.color">black</prop>
                        <prop key="kaptcha.textproducer.font.color">darkGray</prop>
                        <prop key="kaptcha.textproducer.font.size">32</prop>
                        <prop key="kaptcha.textproducer.char.length">4</prop>
                        <prop key="kaptcha.textproducer.char.space">4</prop>
                        <prop key="kaptcha.textproducer.char.string">123456789qwertyuioplkjhgfdsazxcvbnm</prop>
                    </props>
                </constructor-arg>
            </bean>
        </property>
    </bean>
    <!--邮件提醒线程池-->
    <bean id="mailTaskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name="corePoolSize" value="10"/>
        <property name="maxPoolSize" value="10"/>
        <property name="queueCapacity" value="10000"/>
    </bean>

</beans>